def pypi_daily(connection):
    create_sql = f"""
    CREATE TABLE IF NOT EXISTS TECH_METRICS.GOLD.PYPI_DAILY(
    TECHNOLOGY STRING,
    DAILY_DOWNLOADS NUMBER,
    DAILY_START_DATE DATE,
    WEEKLY_DOWNLOADS NUMBER,
    WEEKLY_START_DATE DATE,
    MONTHLY_DOWNLOADS NUMBER,
    MONTHLY_START_DATE DATE,
    COLLECTION_DATE TIMESTAMP
    );
    """
    connection.cursor().execute(create_sql)

    insert_sql = f"""
    INSERT INTO TECH_METRICS.GOLD.PYPI_DAILY (
    TECHNOLOGY,
    DAILY_DOWNLOADS, DAILY_START_DATE,
    WEEKLY_DOWNLOADS, WEEKLY_START_DATE,
    MONTHLY_DOWNLOADS, MONTHLY_START_DATE,
    COLLECTION_DATE
    )
    SELECT
    s.TECHNOLOGY,
    MAX(CASE WHEN s.METRIC_NAME = 'last_day_downloads' THEN s.VALUE END) AS DAILY_DOWNLOADS,
    MAX(CASE WHEN s.METRIC_NAME = 'last_day_downloads' THEN TRY_TO_DATE(s.METRIC_DATE) END) AS DAILY_START_DATE,
    MAX(CASE WHEN s.METRIC_NAME = 'last_week_downloads' THEN s.VALUE END) AS WEEKLY_DOWNLOADS,
    MAX(CASE WHEN s.METRIC_NAME = 'last_week_downloads' THEN TRY_TO_DATE(s.METRIC_DATE) END) AS WEEKLY_START_DATE,
    MAX(CASE WHEN s.METRIC_NAME = 'last_month_downloads' THEN s.VALUE END) AS MONTHLY_DOWNLOADS,
    MAX(CASE WHEN s.METRIC_NAME = 'last_month_downloads' THEN TRY_TO_DATE(s.METRIC_DATE) END) AS MONTHLY_START_DATE,
    s.COLLECTION_DATE
    FROM TECH_METRICS.SILVER.METRICS s
    WHERE s.SOURCE = 'pypi API'
    AND NOT EXISTS (
        SELECT 1
        FROM TECH_METRICS.GOLD.PYPI_DAILY g
        WHERE g.TECHNOLOGY = s.TECHNOLOGY
          AND g.COLLECTION_DATE = s.COLLECTION_DATE
    )
    GROUP BY s.TECHNOLOGY, s.COLLECTION_DATE;
    """
    connection.cursor().execute(insert_sql)

