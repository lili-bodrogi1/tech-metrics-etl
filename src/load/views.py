def github_views(connection):
    view1 = f"""
    CREATE OR REPLACE VIEW TECH_METRICS.VIEW.GITHUB_STARS_DAILY_GROWTH AS
    SELECT
        TECHNOLOGY,
        UPDATE_DATE,
        STARS,
        LAG(STARS) OVER (PARTITION BY TECHNOLOGY ORDER BY UPDATE_DATE) AS PREV_STARS,
        STARS - LAG(STARS) OVER (PARTITION BY TECHNOLOGY ORDER BY UPDATE_DATE) AS STARS_DAILY_GROWTH
    FROM
        TECH_METRICS.GOLD.GITHUB_DAILY
    ORDER BY TECHNOLOGY, UPDATE_DATE;
    """
    connection.cursor().execute(view1)

    view2 = f"""
    CREATE OR REPLACE VIEW TECH_METRICS.VIEW.GITHUB_FORKS_DAILY_GROWTH AS
    SELECT
        TECHNOLOGY,
        UPDATE_DATE,
        FORKS,
        LAG(FORKS) OVER (PARTITION BY TECHNOLOGY ORDER BY UPDATE_DATE) AS PREV_FORKS,
        FORKS - LAG(FORKS) OVER (PARTITION BY TECHNOLOGY ORDER BY UPDATE_DATE) AS FORKS_DAILY_GROWTH
    FROM
        TECH_METRICS.GOLD.GITHUB_DAILY
    ORDER BY TECHNOLOGY, UPDATE_DATE;
    """
    connection.cursor().execute(view2)

    view3 = f"""
    CREATE OR REPLACE VIEW TECH_METRICS.VIEW.GITHUB_OPEN_ISSUES_TREND AS
    SELECT
        TECHNOLOGY,
        UPDATE_DATE,
        OPEN_ISSUES,
        OPEN_ISSUES - LAG(OPEN_ISSUES) OVER (PARTITION BY TECHNOLOGY ORDER BY UPDATE_DATE) AS DAILY_CHANGE
    FROM TECH_METRICS.GOLD.GITHUB_DAILY
    ORDER BY TECHNOLOGY, UPDATE_DATE;
    """
    connection.cursor().execute(view3)

    view4 = f"""
    CREATE OR REPLACE VIEW TECH_METRICS.VIEW.GITHUB_SUMMARY AS
    SELECT
        TECHNOLOGY,
        DATE_TRUNC('WEEK', UPDATE_DATE) AS WEEK_START,
        MAX(STARS) - MIN(STARS) AS STARS_WEEKLY_GROWTH,
        MAX(FORKS) - MIN(FORKS) AS FORKS_WEEKLY_GROWTH,
        MAX(OPEN_ISSUES) - MIN(OPEN_ISSUES) AS OPEN_ISSUES_WEEKLY_CHANGE
    FROM TECH_METRICS.GOLD.GITHUB_DAILY
    GROUP BY TECHNOLOGY, DATE_TRUNC('WEEK', UPDATE_DATE)
    ORDER BY TECHNOLOGY, WEEK_START;
    """
    connection.cursor().execute(view4)