def github_daily(connection):
    create_sql = f"""
    CREATE TABLE IF NOT EXISTS TECH_METRICS.GOLD.GITHUB_DAILY(
    TECHNOLOGY STRING,
    UPDATE_DATE DATE,
    STARS NUMBER,
    FORKS NUMBER,
    OPEN_ISSUES NUMBER,
    COLLECTION_DATE TIMESTAMP
    );
    """
    connection.cursor().execute(create_sql)

    insert_sql = f"""
    INSERT INTO TECH_METRICS.GOLD.GITHUB_DAILY (
    TECHNOLOGY, UPDATE_DATE, STARS, FORKS, OPEN_ISSUES, COLLECTION_DATE
    )
    SELECT
    TECHNOLOGY,
    TO_DATE(METRIC_DATE) AS UPDATE_DATE,
    MAX(CASE WHEN METRIC_NAME = 'Stars' THEN VALUE END) AS STARS,
    MAX(CASE WHEN METRIC_NAME = 'Forks' THEN VALUE END) AS FORKS,
    MAX(CASE WHEN METRIC_NAME = 'Open Issues' THEN VALUE END) AS OPEN_ISSUES,
    MAX(COLLECTION_DATE) AS COLLECTION_DATE
    FROM TECH_METRICS.SILVER.METRICS
    WHERE SOURCE = 'GitHub API'
    AND TO_DATE(METRIC_DATE) > COALESCE(
        (SELECT MAX(METRIC_DATE) FROM TECH_METRICS.GOLD.GITHUB_DAILY),
        '1900-01-01'
    )
    GROUP BY TECHNOLOGY, TO_DATE(METRIC_DATE);
    """

    connection.cursor().execute(insert_sql)

