def github_daily(connection):
    create_sql = f"""
    CREATE TABLE IF NOT EXISTS TECH_METRICS.GOLD.GITHUB_DAILY(
    TECHNOLOGY STRING,
    UPDATE_DATE DATE,
    STARS NUMBER,
    FORKS NUMBER,
    OPEN_ISSUES NUMBER,
    COLLECTION_DATE TIMESTAMP
    );
    """
    connection.cursor().execute(create_sql)

    insert_sql = f"""
    INSERT INTO TECH_METRICS.GOLD.GITHUB_DAILY (
    TECHNOLOGY, UPDATE_DATE, STARS, FORKS, OPEN_ISSUES, COLLECTION_DATE
    )
    WITH max_date AS (
    SELECT COALESCE(MAX(UPDATE_DATE), '1900-01-01') AS last_date
    FROM TECH_METRICS.GOLD.GITHUB_DAILY
    )
    SELECT
    TECHNOLOGY,
    TO_DATE(METRIC_DATE) AS UPDATE_DATE,
    MAX(CASE WHEN METRIC_NAME = 'stars' THEN VALUE END) AS STARS,
    MAX(CASE WHEN METRIC_NAME = 'forks' THEN VALUE END) AS FORKS,
    MAX(CASE WHEN METRIC_NAME = 'open_issues' THEN VALUE END) AS OPEN_ISSUES,
    MAX(COLLECTION_DATE) AS COLLECTION_DATE
    FROM TECH_METRICS.SILVER.METRICS, max_date
    WHERE SOURCE = 'GitHub API'
        AND TO_DATE(METRIC_DATE) > max_date.last_date
    GROUP BY TECHNOLOGY, TO_DATE(METRIC_DATE);
    """

    connection.cursor().execute(insert_sql)

